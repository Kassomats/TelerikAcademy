@using ITest.Models.CategoryViewModels
@model CategoriesViewModel

<link rel="stylesheet" href="~/css/showCategories.css" />
<link href="https://fonts.googleapis.com/css?family=Kanit" rel="stylesheet">


<div class="container index">
    <div class="row">
        <div class="col-md-12">
            <div class="panel with-nav-tabs panel-default">
                <div class="panel-heading">
                    <ul class="category-select nav nav-tabs">
                        @{ var x = 0; }
                        @foreach (var c in Model.AllCategories)
                        {
                            <li class="@c.CategoryState">
                                <a href="#tab@(x++)default"
                                   id="#category-tab"
                                   data-toggle="tab"
                                   class="@c.CategoryState"
                                   data-category="@c.Category">
                                    @c.Category
                                </a>
                            </li>
                        }
                    </ul>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        @{ x = 0; }
                        @foreach (var c in Model.AllCategories)
                        {
                            <div class="tab-pane fade in" id="tab@(x++)default">
                                <div class="well well-sm clearfix">
                                    <span class="pull-left"></span>
                                    <form asp-controller="Solve" asp-action="ShowTest" id="start-Button" method="get">
                                        @if (c.CategoryState == UserTestState.Submitted)
                                        {
                                            <button id="startButton" name="id" class="create-test btn btn-default" disabled value="@c.Category">Submitted</button>
                                        }
                                        else if (c.CategoryState == UserTestState.Start)
                                        {
                                            <button id="startButton" name="id" class="create-test btn btn-default" type="submit" value="@c.Category">Start</button>

                                        }
                                        else if (c.CategoryState == UserTestState.CategoryEmpty)
                                        {
                                            <button id="startButton" name="id" class="create-test btn btn-default" disabled value="@c.Category">Category currently empty ;(</button>

                                        }
                                        else if (c.CategoryState == UserTestState.CurrentlySolving)
                                        {
                                            <button id="startButton" name="id" class="create-test btn btn-default" type="submit" value="@c.Category">Continue solving!</button>

                                        }
                                        else if (c.CategoryState == UserTestState.NotSubmittedOnTime)
                                        {
                                            <button id="startButton" name="id" class="create-test btn btn-default" disabled value="@c.Category">Started But Never Submitted</button>

                                        }

                                    </form>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/user-test.js"></script>
}
